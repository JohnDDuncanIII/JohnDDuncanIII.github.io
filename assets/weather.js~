// http://forecast.weather.gov/MapClick.php?lat=39.83092929999999&lon=-77.23109549999998&FcstType=json

// needed to translate weather.gov forecast notation to picon notation
var map = new Object(); // or var map = {};
map["Scattered Showers"]= "drizzly";
map["Chance Showers"]= "mayberainy";
map["Showers Likely"]= "rainy";
map["Mostly Cloudy"] = "cloudy";
map["Partly Sunny"] = "partlysunny";
map["Overcast"] = "cloudy";
map[" Rain Fog/Mist"] = "rainyfoggy";
map[" Fog/Mist"] = "foggy";
map["Showers"] = "rainy";
map["Partly Cloudy"] = "partlycloudy";
map["Mostly Sunny"] = "verysunny";
map["Chance Light Rain"] = "mayberainy";
map["Rain"] = "rainy";
map["Rain Likely and Patchy Fog"] = "rainyfoggy";
map[" Light Rain"] = "rainy";
map["Slight Chance Showers"] = "mayberainy";
map["Slight Chance T-storms"] = "maybestormy";
map["Mostly Clear"] = "sunny";
map["Fair"] = "sunny";
map["Isolated T-storms"] = "stormy";
map["Sunny and Windy"] = "sunnywindy";
map["Mostly Clear and Breezy"] = "sunnywindy";
map["Clear"] = "sunny";
map["Becoming Sunny"] = "partlysunny";
map["Sunny"] = "verysunny";
map["Partly Cloudy and Breezy"] = "partlycloudybreezy";
map["Windy. Showers"] = "rainywindy";
map["Breezy. Showers"] = "rainywindy";
map["Sunny and Breezy"] = "sunnywindy";
map["Showers and Breezy"] = "rainywindy";
map["Breezy. Slight Chance Showers"] = "mayberainybreezy";
map["Rain Likely"] = "rainy";
map["Chance Rain"] = "mayberainy";
map["T-storms Likely"] = "stormy";
map[" Light Rain Fog/Mist"] = "rainyfoggy";
map["Decreasing Clouds"] = "partlycloudy";
map["Showers and Patchy Fog"] = "rainyfoggy";
map["Chance Showers and Patchy Fog"] = "mayberainyfoggy";
map["Showers Likely and Patchy Fog"] = "rainyfoggy"; 
map[""] = true;
map["NA"] = true;

var d = new Date();
var weekday = new Array(7);
weekday[0]=  "sun";
weekday[1] = "mon";
weekday[2] = "tue";
weekday[3] = "wed";
weekday[4] = "thu";
weekday[5] = "fri";
weekday[6] = "sat";
var n = weekday[d.getDay()]; // get picon val of current day
var hasShownMoon = false;
var LATITUDE=39.83092929999999;
var LONGITUDE=-77.23109549999998;
var geocoder = new google.maps.Geocoder();

var address = "Detroit";
var loc = location.toString();
if(loc.includes("=")) {
    address = loc.substring(loc.indexOf("=")+1, loc.length);
    address = address.replace(/%20/g, " ");
}


geocoder.geocode( { 'address': address}, function(results, status) {
  if (status == google.maps.GeocoderStatus.OK) {
    LATITUDE = results[0].geometry.location.lat();
    LONGITUDE = results[0].geometry.location.lng();
  } 
}); 

// fetches the json file from weather.gov
function fetchJSONFile(path, callback) {
    var httpRequest = new XMLHttpRequest();
    httpRequest.onreadystatechange = function() {
        if (httpRequest.readyState === 4) {
            if (httpRequest.status === 200) {
                var data = JSON.parse(httpRequest.responseText);
                if (callback) callback(data);
            }
        }
    };
    httpRequest.open('GET', path);
    httpRequest.send(); 
}

function weather() {
    var weatherBox = document.getElementById("weatherBox");
 
    var toAdd = document.createElement("hr");
    toAdd.className = "style0";
    weatherBox.appendChild(toAdd);

    // add "Today" image
    var toAdd = document.createElement("img");
    toAdd.setAttribute('id', "day");
    //toAdd.className = "img-with-text-weather";
    toAdd.setAttribute('src', "assets/weather/day/today/face.gif");
    weatherBox.appendChild(toAdd);
    var br = document.createElement("br");
    weatherBox.appendChild(br);

    // this requests the file and executes a 
    //    callback with the parsed result once it is available
    fetchJSONFile('http://forecast.weather.gov/MapClick.php?lat='+
		  LATITUDE+'&lon='+
		  LONGITUDE+'&FcstType=json', 
		  function(data) {
		      var showDate = true;
		      helper(data.currentobservation.Temp, data.currentobservation.Weather, showDate, data.currentobservation.Weather);
		     
		      var tempArray = data.data.temperature;
		      var forecastArray = data.data.weather;
		      var text = data.data.text;
		      var counter = d.getDay();
		      var j = 0;
		      var afternoon = false;

		      if(data.time.startPeriodName[0]=="This Afternoon") {
			  helper(tempArray[j], forecastArray[j], false, text[j]);
			  j++;
			  afternoon = true;
		      }

		      // add "Tonight" image
		      var toAdd = document.createElement("img");
		      toAdd.setAttribute('id', "day");
		      //toAdd.className = "img-with-text-weather";
		      toAdd.setAttribute('src', "assets/weather/day/tonight/face.gif");
		      weatherBox.appendChild(toAdd);
		      var br = document.createElement("br");
		      weatherBox.appendChild(br);
		      showDate = false;
		      
		      for(j; j < tempArray.length; j++) {
			  helper(tempArray[j], forecastArray[j], showDate, text[j]);
			  if(j==1 && afternoon) {
			      var toAdd = document.createElement("hr");
			      toAdd.className = "style0";
			      weatherBox.appendChild(toAdd);
			      
			  } else if (j == 0 && !afternoon) {
			      var toAdd = document.createElement("hr");
			      toAdd.className = "style0";
			      weatherBox.appendChild(toAdd);
			  }
			  
			  if(afternoon) {
			      if(j%2!=0) {
				  if(j >= 1) {
				      counter++;
				      if(counter==weekday.length) { counter =0;}
				      n = weekday[counter];
				  }
				  
				  showDate = true;
			      } else {
				  showDate = false;
			      }
			  } else {
			      if(j%2==0) {
				  if(j >= 2) {
				      counter++;
				      if(counter==weekday.length) { counter =0;}
				      n = weekday[counter];
				  }
				  
				  showDate = true;
			      } else {
				  showDate = false;
			      }
			  }
		      }
		      var toAdd = document.createElement("hr");
		      toAdd.className = "style0";
		      weatherBox.appendChild(toAdd);
		  });

}
function helper(curTemp, forecast, showDate, text) {
    var weatherPath = 0;
    var tableBox = document.createElement("div");
    tableBox.className = "img-with-text-weather-table";
   
    var toAdd = document.createElement("img");
    var dayBox = document.createElement("div");
    dayBox.className =  "img-with-text-weather-table";
    toAdd.setAttribute('id', "day");
    toAdd.className = "img-with-text-weather-table";
    toAdd.setAttribute('src', "assets/weather/day/"+n+"/face.gif");
    if(!showDate) {
	//if(n==weekday[d.getDay()] && !hasShownMoon) {
	text = text.toLowerCase();
	if(text.includes("cloudy")) {
	    toAdd.setAttribute('src', "assets/weather/sky/partlymoonny/face.gif");
	} else {
	    toAdd.setAttribute('src', "assets/weather/sky/moonny/face.gif");
	}
	    //hasShownMoon = true;
	//} else {
	    //toAdd.style.visibility = 'hidden';
	//}
    }
    dayBox.appendChild(toAdd);
    weatherBox.appendChild(dayBox);
    
    var tempBox = document.createElement("div");
    tempBox.className = "img-with-text-weather-table";
    tempBox.setAttribute('id', "tempBox");

    var eworldBox =  document.createElement("div");
    eworldBox.className = "img-with-text-weather-table";
    eworldBox.setAttribute('id', "eWorldBox");
    eworldBox.setAttribute('style',"display: inline-block;");

    for(var i = 0; i < curTemp.length; i++) {
	var toAdd = document.createElement("img");
	toAdd.setAttribute('id', "temp"+i);
	toAdd.className = "img-with-text-weather-letter";
	toAdd.setAttribute('src', 'assets/weather/nums/'+curTemp.charAt(i)+'.gif');
	eworldBox.appendChild(toAdd);
    }
    var toAdd = document.createElement("img");
    toAdd.setAttribute('id', "tempDegree");
    toAdd.className = "img-with-text-weather-letter";
    toAdd.setAttribute('src', 'assets/weather/nums/degree.gif');
    eworldBox.appendChild(toAdd);
    
    var toAdd = document.createElement("img");
    toAdd.setAttribute('id', "tempDegree");
    toAdd.className = "img-with-text-weather-letter";
    toAdd.setAttribute('src', 'assets/weather/nums/f.gif');
    eworldBox.appendChild(toAdd);
    tempBox.appendChild(eworldBox);

    weatherPath = curTemp;
    while(weatherPath%5 != 0) { weatherPath--; } // decrement the value to a valid picon therm
    if(weatherPath<100 && weatherPath>0) {
	weatherPath = "p0" + weatherPath;
    }
    if(weatherPath < 0) {
	weatherPath = weatherPath * -1;
	weatherPath = "m0" + weatherPath;
    }

    var thermBox = document.createElement("div");
    thermBox.className = "img-with-text-weather-block";
    thermBox.setAttribute('id', "thermBox");
    var toAdd = document.createElement("img");
    toAdd.setAttribute('id', "therm");
    toAdd.className = "img-with-text-weather-block";
    toAdd.setAttribute('src', "assets/weather/temp2/" + weatherPath + "/face.gif");
    thermBox.appendChild(toAdd);
    tempBox.appendChild(thermBox);
    weatherBox.appendChild(tempBox);

    if(forecast.includes("then")) {
	var firstForecast = forecast.substring(0, forecast.indexOf("then")-1);
	var secondForecast = forecast.substring(forecast.indexOf("then")+5, forecast.length);
	
	var tableBox = document.createElement("div");
	tableBox.className = "img-with-text-weather-table";
	var toAdd = document.createElement("img");
	toAdd.setAttribute('id', "picon");
	toAdd.setAttribute('title', text);
	//toAdd.setAttribute('title', firstForecast);
	toAdd.className = "img-with-text-weather-table";
	if(map[firstForecast] == true) {
	    toAdd.setAttribute('src', "assets/weather/MISC/question/face.gif");
	} else {
	    toAdd.setAttribute('src', "assets/weather/sky/"+map[firstForecast]+"/face.gif");
	}
	
	tableBox.appendChild(toAdd);
	weatherBox.appendChild(tableBox);

	var tableBox = document.createElement("div");
	tableBox.className = "img-with-text-weather-table";
	var toAdd = document.createElement("img");
	toAdd.setAttribute('id', "picon");
	//toAdd.setAttribute('title', text);
	toAdd.setAttribute('title', secondForecast);
	toAdd.className = "img-with-text-weather-table";
	if(map[secondForecast] == true) {
	    toAdd.setAttribute('src', "assets/weather/MISC/question/face.gif");
	} else {
	    toAdd.setAttribute('src', "assets/weather/sky/"+map[secondForecast]+"/face.gif");
	}
	tableBox.appendChild(toAdd);
	weatherBox.appendChild(tableBox);
    } else {
	var tableBox = document.createElement("div");
	tableBox.className = "img-with-text-weather-table";
	var toAdd = document.createElement("img");
	toAdd.setAttribute('id', "picon");
	//toAdd.setAttribute('title', text);
	toAdd.setAttribute('title', forecast);
	toAdd.className = "img-with-text-weather-table";
	
	if(map[forecast] == true) {
	    toAdd.setAttribute('src', "assets/weather/MISC/question/face.gif");
	} else {
	    toAdd.setAttribute('src', "assets/weather/sky/"+map[forecast]+"/face.gif");
	}

	tableBox.appendChild(toAdd);
	weatherBox.appendChild(tableBox);
    }

    var br = document.createElement("br");
    weatherBox.appendChild(br);
}
// first, we try to get the location by HTML5 geolocation
if ("geolocation" in navigator) {
    //alert(location.substring(location.indexOf("w="), location.length));
   
    navigator.geolocation.getCurrentPosition(
	function(position) {
	    LATITUDE = position.coords.latitude;
	    LONGITUDE = position.coords.longitude;
	    weather();
	},
	function (error) { // if not, just load the weather w/ default lat & long
	    if (error.code == error.PERMISSION_DENIED)
		weather();
	});
} else {
    window.onload = weather; // if no geolocation, just load the weather stuff on pageload
}

